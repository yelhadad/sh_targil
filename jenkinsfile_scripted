node {
  try {
docker.image('yelhadad/shabak:5').inside('--privileged') {
        stage('Build') {
        sh 'python3 /tmp/zip_job.py'
    }

    stage('Publish') {
            env.VERSION = sh(script:'echo $VERSION', returnStdout: true).trim()
            // coping the created files (artifactory plugin does not reconize them on temp)
            sh 'mkdir -p ziped_files'
            sh 'cp -r /tmp/ziped_files .'
            sh 'ls ziped_files'

            def server = Artifactory.server 'artifactory'
            def uploadSpec = """ {
                "files": [
                {
                  "pattern": "ziped_files/*.zip",
                  "target": "binary-storage/zip${VERSION}/"
                 }
                ]
            }"""
            server.upload spec: uploadSpec
        }

        stage('Report') {
          echo 'sending failure job email'
          emailext body: 'pipeline failed',
            subject: 'pipeline failed',
            to: 'yoave14@gmail.com'
        }
    }
  }

  catch(exc) {
    stage('Report') {
    echo 'sending failure job email'
    emailext body: 'pipeline failed',
      subject: 'pipeline failed',
      to: 'yoave14@gmail.com'
    }

    }
    finally {
                      echo 'cleaning workspace'
                deleteDir() 
    }
  }
    

    